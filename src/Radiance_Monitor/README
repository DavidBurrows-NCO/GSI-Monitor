README RadMon package 

The RadMon (radiance monitoring) package can be used to extract certain information
from radiance diagnostic files and visualize the results by plotting the data using
javascript or optionally GrADS.  The package also may optionally perform data 
validation and error checking and report problems using email.  The package is 
supported on wcoss2, hera, orion, cheyenne, jet, and s4 machines.

The package is organized in two main pieces, the data_extract and image_gen 
(image generation).  There is also an nwprod directory, which contains the lower 
level components of the data_extract portion.  The J-Jobs, scripts, and ush scripts
which used to be in the nwprod directory have been moved to the global_workflow
repository and may be run as part of the vrfy job in global-workflow. Make sure your 
expdir/*/config.vrfy file sets export VRFYRAD="YES".

The parm directory contains configuration files used by the entire package.
The data_extract and image_gen directories also have parm diretories,
containing configuration files specific to the data extraction and image generation
functions.

In use the package:

1.  Run GSI-monitor/ush/build.sh.  This builds all necessary executables.

2.  The GSI-monitor sets default values for necessary storage, work, and log file 
locations in GSI-monitor/parm/Mon_config.  If you want to override the defaults
the important settings are: 

tankdir  -- the location for extracted data storage
ptmp     -- log file location
stmp     -- work space

Note that the values are set for each machine.

3.  If you've run an experiment using global-workflow and have set VRFYRAD="YES", then
extracted data should be in your comrot/$PSLOT directory.  You can leave the data there
or move it to your $TANKDIR.  If you leave it in place you will have to specify the 
location for the data extraction and web site create scripts below.  If you would 
like to copy the data to your $TANKDIR location use 
GSI-monitor/src/Radiance_Monitor/data_extract/ush/RadMon_CP_glb.sh to move the files
into the correct directory structure in $TANKDIR.

If you haven't extracted the data via global-workflow, then navigate to 
GSI-monitor/src/Radiance_Monitor/data_extract/ush and run:

 ./RadMon_DE_glb.sh suffix -p|--pdate -r|--run -s|--radstat

	suffix       is the $NET value or the name of your parallel.  
        -p|--pdate   is the cycle time for which you wish to perform the extraction.  
                        It must be in YYYYMMDDHH format.
        -r|--run     is the $RUN value.  The default is gdas, which should work in 
                        most cases.
        -s|--radstat is the location of the radstat file.  This is likely to be your 
                        comrot/$PSLOT directory.

The data extraction will place the extracted data in $TANKDIR/$SUFFIX/$RUN.$CYCLE/$HR/radmon.

4.  Navigate to GSI-monitor/src/Radiance_Monitor/image_gen/html and run Install_html.sh.  
This will build and customize the files for a web site using the available 
satellite/instrument sources.  If data was extracted through global-workflow then use the
-t|--tank argument to specify the data location in comrot/$PSLOT instead of the default
$TANKDIR.

4.  Run the image generation.  Navigate to GSI-monitor/src/Radiance_Monitor/image_gen/ush
and run:

 ./RadMon_IG_glb.sh suffix -p|--pdate -r|--run -n|--ncyc -t|--tank

	suffix       is the $NET value or the name of your parallel.  
        -p|--pdate   is the cycle time for which you wish to generate images.
                        It must be in YYYYMMDDHH format.
        -r|--run     is the $RUN value.  The default is gdas, which should work in 
                        most cases.
        -n|--ncyc    number of cycles to be used in time-series plots.  If not
                        specified the default value of 120 cycles is used.
        -t|--tank    location of the extracted data files.  This is likely to be your 
                        comrot/$PSLOT directory.  This is only needed if your extraction
                        was via global-workflow and NOT copied to $TANKDIR.

5.  Move the data and html files to the web server (emcrzdm).  If you're on wcoss2 and if 
you have set up password free access for your account, then RadMon_IG_glb.sh will 
queue the transfer script and move the files to the server.  Alternately the transfer 
script, RunTransfer.sh, can be run from the command line.

On all other machines you will have to manually move files from your $TANKDIR/imgn/$NET/$RUN/radmon
directory to the server.



If you encounter problems please send me email and I'll be glad to help:
      edward.safford@noaa.gov

