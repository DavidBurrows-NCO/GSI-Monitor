#!/bin/sh

#
# JNAM_VERFRAD
#
# This j-job is the RadMon's regional job script.  It extracts
# RadMon data from GSI radstat files and stores it in binary
# format.  
#
# These environment variables must be set in order to run this
# job:
#
#    $MY_RADMON  -- Directory of top level of RadMon package.
#    $PDY        -- YYYYMMDD of cycle to be processed
#    $cyc        -- HH of cycle to be processed
#    $TANKverf   -- Output location for extracted data files.  Output
#                   will be located in $TANKverf/stats/regional/$NET.
#    $NDATE      -- Should be set by loading module prod_util.
#
# Other important environment variables with defaults:
#
#    $NET        -- identifying source also termed $RADMON_SUFFIX
#                   within the RadMon package.  Default:  'nam'.
#    $HOMEradmon -- Directory containing supporting extraction 
#                   scripts.  Default:  '$MY_RADMON/nwprod/radmon_shared'.
#    $HOMEnam    -- Directory containing regional job and scripts.
#                   Default:  '$MY_RADMON/nwprod/nam_radmon'.
#    $CYCLE_INTERVAL -- Interval (in hours) between cycles.  Default is 1.
#    $COMIN      -- Location of radstat files.  Default: 
#                   '/lfs/h1/ops/prod/com/nam/v4.2'
#

envir=${envir:-prod}
export REGIONAL_RR=${REGIONAL_RR:-1}

###############################
# Default NET
#
export NET=${NET:-nam}

########################################################### 
# obtain unique process id (pid) and make temp directories
###########################################################
pid=$$
outid=${outid:-"LL$job"}
jobid=${jobid:-"${outid}.o${pid}"}

export RADMON_SUFFIX=${RADMON_SUFFIX:-$NET}
export DATAROOT=${DATAROOT:-/tmpnwprod2}
export DATA=${DATA:-${DATAROOT}/${jobid}}

mkdir -p $DATA
cd $DATA

export jlogfile=${jlogfile:-${COMROOT}/logs/jlogfiles/jlogfile.${job}.${pid}}

rgnHH=${rgnHH:-${cyc}z}
rgnTM=${rgnTM:-tm06}

##############################################
# Specify Execution Areas
##############################################
export HOMEradmon=${HOMEradmon:-${MY_RADMON}/nwprod/radmon_shared}
export HOMEnam=${HOMEnam:-${MY_RADMON}/nwprod/nam_radmon}
export SCRnam=${SCRnam:-${HOMEnam}/scripts}
export FIXnam=${FIXnam:-${HOMEnam}/fix}

#############################################
# TANKverf - WHERE OUTPUT DATA WILL RESIDE
#############################################
export TANKverf=${TANKverf:-/com/verf/${envir}}
export TANKverf_rad=${TANKverf_rad:-${TANKverf}/radmon.${PDY}}
export COM_IN=${COM_IN:-/lfs/h1/ops/${envir}/com/${NET}/v4.2}
export COMIN=${COMIN:-$COM_IN/${RADMON_SUFFIX}.${PDY}}

echo "PDY: $PDY"
echo "cyc: $cyc"
echo "TANKverf_rad: $TANKverf_rad"
echo "COMIN: $COMIN"

mkdir -p -m 775 $TANKverf_rad

########################################
# Set necessary environment variables
########################################
export RAD_AREA=${RAD_AREA:-rgn}
export CYCLE_INTERVAL=${CYCLE_INTERVAL:-1}

############################################
#  determine PDY and cyc for previous cycle
#############################################
prevdate=$(${NDATE} -${CYCLE_INTERVAL} ${PDY}${cyc})
export P_PDY=${prevdate:0:8}
export p_cyc=${prevdate:8:2}
export TANKverf_radM1=${TANKverf_radM1:-${TANKverf}/radmon.${P_PDY}}

#####################################################################
# Note:  The organization to the radstat catch-up files follows
#        this logic:
#####################################################################

case $cyc in
   00) export rgnHH=t00z
       export rgnTM=tm00;;
   01) export rgnHH=t06z
       export rgnTM=tm05;;
   02) export rgnHH=t06z
       export rgnTM=tm04;;
   03) export rgnHH=t06z
       export rgnTM=tm03;;
   04) export rgnHH=t06z
       export rgnTM=tm02;;
   05) export rgnHH=t06z
       export rgnTM=tm01;;
   06) export rgnHH=t06z
       export rgnTM=tm00;;
   07) export rgnHH=t12z
       export rgnTM=tm05;;
   08) export rgnHH=t12z
       export rgnTM=tm04;;
   09) export rgnHH=t12z
       export rgnTM=tm03;;
   10) export rgnHH=t12z
       export rgnTM=tm02;;
   11) export rgnHH=t12z
       export rgnTM=tm01;;
   12) export rgnHH=t12z
       export rgnTM=tm00;;
   13) export rgnHH=t18z
       export rgnTM=tm05;;
   14) export rgnHH=t18z
       export rgnTM=tm04;;
   15) export rgnHH=t18z
       export rgnTM=tm03;;
   16) export rgnHH=t18z
       export rgnTM=tm02;;
   17) export rgnHH=t18z
       export rgnTM=tm01;;
   18) export rgnHH=t18z       # dayfile changes here
       export rgnTM=tm00;;
   19) export rgnHH=t00z
       export rgnTM=tm05;;
   20) export rgnHH=t00z
       export rgnTM=tm04;;
   21) export rgnHH=t00z
       export rgnTM=tm03;;
   22) export rgnHH=t00z
       export rgnTM=tm02;;
   23) export rgnHH=t00z
       export rgnTM=tm01;;
esac

export biascr=${biascr:-$COMIN/${RADMON_SUFFIX}.${rgnHH}.satbias.${rgnTM}}
export radstat=${radstat:-$COMIN/${RADMON_SUFFIX}.${rgnHH}.radstat.${rgnTM}}

echo "radstat: $radstat"
echo "biascr:  $biascr"

########################################################
# Execute the script.
echo "EXECUTING ${SCRnam}/exnam_verfrad.sh"
${RADMONSH:-${SCRnam}/exnam_verfrad.sh} ${PDY} ${cyc}
########################################################

################################
# Remove the Working Directory
################################
KEEPDATA=${KEEPDATA:-NO}
if [ ${KEEPDATA} = NO ] ; then 
  cd $DATAROOT
  rm -rf $DATA 
fi

